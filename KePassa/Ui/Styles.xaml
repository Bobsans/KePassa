<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:helper="clr-namespace:SecretStore.Ui.Helper">
  <helper:TreeViewItemAlimentConverter Length="19" x:Key="MarginConverter" />
  <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
    <Setter Property="Foreground" Value="#FF5B6773" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TreeViewItem">
          <DockPanel>
            <DockPanel DockPanel.Dock="Top">
              <Border
                DockPanel.Dock="Right"
                Focusable="False"
                Width="10"
                Height="23"
                BorderBrush="Transparent"
                BorderThickness="0" Margin="0,-1,0,0">
                <Path x:Name="Triangle">
                  <Path.Data>
                    <PathGeometry>
                      <PathFigure IsClosed="True" StartPoint="0,1">
                        <LineSegment Point="10, 12" />
                        <LineSegment Point="0, 22" />
                      </PathFigure>
                    </PathGeometry>
                  </Path.Data>
                </Path>
              </Border>
              <Border x:Name="Bd"
                      DockPanel.Dock="Left"
                      BorderBrush="{TemplateBinding Property=BorderBrush}"
                      Background="{TemplateBinding Property=Background}"
                      Margin="0,-1,0,0"
                      BorderThickness="{TemplateBinding Property=BorderThickness}"
                      SnapsToDevicePixels="True">
                <DockPanel Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ResourceKey=MarginConverter}}">
                  <ToggleButton Name="Expander"
                                DockPanel.Dock="Left"
                                IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press">
                    <ToggleButton.Style>
                      <Style TargetType="ToggleButton">
                        <Setter Property="Focusable" Value="False" />
                        <Setter Property="Width" Value="16" />
                        <Setter Property="Height" Value="16" />

                        <Setter Property="Template">
                          <Setter.Value>
                            <ControlTemplate TargetType="ToggleButton">
                              <Border Padding="5,5,5,5" Width="16" Height="16">
                                <Path Fill="#FFFFFFFF" Stroke="#FF818181" Name="ExpandPath">
                                  <Path.Data>
                                    <PathGeometry Figures="M0,0L0,6L6,0z" />
                                  </Path.Data>
                                  <Path.RenderTransform>
                                    <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                  </Path.RenderTransform>
                                </Path>
                              </Border>
                              <ControlTemplate.Triggers>
                                <Trigger Property="ToggleButton.IsChecked" Value="True">
                                  <Setter Property="UIElement.RenderTransform" TargetName="ExpandPath">
                                    <Setter.Value>
                                      <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                    </Setter.Value>
                                  </Setter>
                                  <Setter Property="Shape.Fill" TargetName="ExpandPath" Value="#FF595959" />
                                  <Setter Property="Shape.Stroke" TargetName="ExpandPath" Value="#FF262626" />
                                </Trigger>
                                <Trigger Property="UIElement.IsMouseOver" Value="True">
                                  <Setter Property="Shape.Stroke" TargetName="ExpandPath" Value="#FF27C7F7" />
                                  <Setter Property="Shape.Fill" TargetName="ExpandPath" Value="#FFCCEEFB" />
                                </Trigger>
                                <MultiTrigger>
                                  <MultiTrigger.Conditions>
                                    <Condition Property="UIElement.IsMouseOver" Value="True" />
                                    <Condition Property="ToggleButton.IsChecked" Value="True" />
                                  </MultiTrigger.Conditions>
                                  <Setter Property="Shape.Stroke" TargetName="ExpandPath" Value="#FF1CC4F7" />
                                  <Setter Property="Shape.Fill" TargetName="ExpandPath" Value="#FF82DFFB" />
                                </MultiTrigger>
                              </ControlTemplate.Triggers>
                            </ControlTemplate>
                          </Setter.Value>
                        </Setter>
                      </Style>
                    </ToggleButton.Style>
                  </ToggleButton>
                  <ContentPresenter DockPanel.Dock="Left"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding HeaderedContentControl.Header}"
                                    ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                    ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                    ContentSource="Header"
                                    Name="PART_Header"
                                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                </DockPanel>
              </Border>
            </DockPanel>
            <ItemsPresenter x:Name="ItemsHost" DockPanel.Dock="Top" />
          </DockPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="TreeViewItem.IsExpanded" Value="False">
              <Setter Property="UIElement.Visibility" TargetName="ItemsHost" Value="Collapsed" />
            </Trigger>

            <Trigger Property="ItemsControl.HasItems" Value="False">
              <Setter Property="UIElement.Visibility" TargetName="Expander" Value="Hidden" />
            </Trigger>

            <Trigger Property="TreeViewItem.IsSelected" Value="True">
              <Setter Property="Panel.Background" TargetName="Bd" Value="{DynamicResource ResourceKey={x:Static SystemColors.HighlightBrushKey}}" />
              <Setter Property="TextElement.Foreground" Value="{DynamicResource ResourceKey={x:Static SystemColors.HighlightTextBrushKey}}" />
              <Setter Property="Shape.Fill" TargetName="Triangle" Value="{DynamicResource ResourceKey={x:Static SystemColors.HighlightBrushKey}}" />
              <Setter Property="Shape.Stroke" TargetName="Triangle" Value="{DynamicResource ResourceKey={x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>

            <Trigger Property="TreeViewItem.IsMouseOver" Value="True">
              <Setter Property="Panel.Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.MenuHighlightBrushKey}}" />
              <Setter Property="TextElement.Foreground" Value="{DynamicResource ResourceKey={x:Static SystemColors.HighlightTextBrushKey}}" />
              <Setter Property="Shape.Fill" TargetName="Triangle" Value="{DynamicResource ResourceKey={x:Static SystemColors.MenuHighlightBrushKey}}" />
              <Setter Property="Shape.Stroke" TargetName="Triangle" Value="{DynamicResource ResourceKey={x:Static SystemColors.MenuHighlightBrushKey}}" />
            </Trigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TreeViewItem.IsSelected" Value="True" />
                <Condition Property="Selector.IsSelectionActive" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Property="Panel.Background" TargetName="Bd" Value="{DynamicResource ResourceKey={x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
              <Setter Property="Border.BorderThickness" TargetName="Bd" Value="0,1,1,0" />
              <Setter Property="TextElement.Foreground" Value="{DynamicResource ResourceKey={x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
              <Setter Property="Shape.Fill" TargetName="Triangle" Value="{DynamicResource ResourceKey={x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
              <Setter Property="Shape.Stroke" TargetName="Triangle" Value="{DynamicResource ResourceKey={x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>

            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Property="TextElement.Foreground" Value="{DynamicResource ResourceKey={x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type TreeView}" TargetType="{x:Type TreeView}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TreeView">
          <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                  BorderBrush="{TemplateBinding Border.BorderBrush}"
                  Name="Bd"
                  SnapsToDevicePixels="True">
            <ScrollViewer CanContentScroll="False"
                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                          Padding="{TemplateBinding Control.Padding}"
                          Background="{DynamicResource ResourceKey={x:Static SystemColors.WindowBrushKey}}"
                          Name="_tv_scrollviewer_"
                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                          Focusable="False">
              <Grid>
                <Border Visibility="Visible"
                        Margin="0, 0, 16, 0"
                        Background="{TemplateBinding Panel.Background}"
                        BorderThickness="0" />
                <ItemsPresenter />
              </Grid>
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Property="Panel.Background" TargetName="Bd" Value="{DynamicResource ResourceKey={x:Static SystemColors.ControlBrushKey}}" />
            </Trigger>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
              <Setter Property="ScrollViewer.CanContentScroll" TargetName="_tv_scrollviewer_" Value="True" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="False">
              <Setter Property="ScrollViewer.VerticalScrollBarVisibility" TargetName="_tv_scrollviewer_" Value="Hidden" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="True" />
                <Condition Property="UIElement.IsKeyboardFocused" Value="True" />
                <Condition Property="UIElement.IsFocused" Value="True" />
              </MultiTrigger.Conditions>
              <Setter Property="ScrollViewer.VerticalScrollBarVisibility" TargetName="_tv_scrollviewer_" Value="Auto" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
    <Setter Property="MaxWidth" Value="4" />
    <Setter Property="MinWidth" Value="4" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ScrollBar">
          <Grid SnapsToDevicePixels="True" MaxWidth="4">
            <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" />
            <Track IsDirectionReversed="True" Name="PART_Track" IsEnabled="{TemplateBinding UIElement.IsMouseOver}">
              <Track.DecreaseRepeatButton>
                <RepeatButton Command="ScrollBar.PageUpCommand">
                  <RepeatButton.Style>
                    <Style TargetType="RepeatButton">
                      <Setter Property="OverridesDefaultStyle" Value="True" />
                      <Setter Property="Panel.Background" Value="#00FFFFFF" />
                      <Setter Property="Focusable" Value="False" />
                      <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                      <Setter Property="Template">
                        <Setter.Value>
                          <ControlTemplate TargetType="RepeatButton">
                            <Rectangle Fill="{TemplateBinding Panel.Background}"
                                       Width="{TemplateBinding FrameworkElement.Width}"
                                       Height="{TemplateBinding FrameworkElement.Height}" />
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                    </Style>
                  </RepeatButton.Style>
                </RepeatButton>
              </Track.DecreaseRepeatButton>
              <Track.Thumb>
                <Thumb>
                  <Thumb.Style>
                    <Style TargetType="Thumb">
                      <Setter Property="OverridesDefaultStyle" Value="True" />
                      <Setter Property="KeyboardNavigation.IsTabStop" Value="True" />
                      <Setter Property="Template">
                        <Setter.Value>
                          <ControlTemplate TargetType="Thumb">
                            <Rectangle Fill="#FFCDCDCD" Name="rectangle"
                                       Width="{TemplateBinding FrameworkElement.Width}"
                                       Height="{TemplateBinding FrameworkElement.Height}"
                                       SnapsToDevicePixels="True" />
                            <ControlTemplate.Triggers>
                              <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <Setter Property="Shape.Fill" TargetName="rectangle" Value="#FFA6A6A6" />
                              </Trigger>
                              <Trigger Property="Thumb.IsDragging" Value="True">
                                <Setter Property="Shape.Fill" TargetName="rectangle" Value="#FF606060" />
                              </Trigger>
                            </ControlTemplate.Triggers>
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                    </Style>
                  </Thumb.Style>
                </Thumb>
              </Track.Thumb>
              <Track.IncreaseRepeatButton>
                <RepeatButton Command="ScrollBar.PageDownCommand">
                  <RepeatButton.Style>
                    <Style TargetType="RepeatButton">
                      <Setter Property="OverridesDefaultStyle" Value="True" />
                      <Setter Property="Panel.Background" Value="#00FFFFFF" />
                      <Setter Property="Focusable" Value="False" />
                      <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                      <Setter Property="Template">
                        <Setter.Value>
                          <ControlTemplate TargetType="RepeatButton">
                            <Rectangle Fill="{TemplateBinding Panel.Background}"
                                       Width="{TemplateBinding FrameworkElement.Width}"
                                       Height="{TemplateBinding FrameworkElement.Height}" />
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                    </Style>
                  </RepeatButton.Style>
                </RepeatButton>
              </Track.IncreaseRepeatButton>
            </Track>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type ScrollViewer}" TargetType="{x:Type ScrollViewer}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ScrollViewer">
          <Grid Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition MaxWidth="4" MinWidth="4" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1" />
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0" />
            <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" />
            <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>
